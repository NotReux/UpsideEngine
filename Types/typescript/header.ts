// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

declare function addReadonly(readonly: Dictionary<string, any>): () => any;

declare interface table {}
declare interface Dictionary<k,v> extends Record<any, any> {}
declare interface ChromaticAberrationConnection {}

declare interface BaseObjectParams {
	Parent?: Scene,
}

declare interface SceneParams {
	Parent?: Instance,
}

declare interface SpriteParams extends BaseObjectParams {
	SpriteSize?: Vector2,
}

declare interface ConnectionParams {
	EventId: number,
	Event: {
		Functions: {},
		Threads: {},
	},
}

declare interface RequestParams {
	ClientId: number,
	Content: {
		className: string,
		id: string,
		name: string,
		properties: {
			instance: {},
			object: {},
		},
	},
}

declare interface Raycast2dResult { 
    Object: PhysicalObject;
    Position: UDim2;
    Distance: Vector2;
    Normal: UDim2 
}

declare interface Raycast2dParams { 
    Filterinterface: string;
    From: Vector2;
    List: Array<BaseObject>;
    To: any 
}

declare interface ClassData {
	name: string,
	constructor?: Dictionary<string, () => any>,
	methods?: Dictionary<string, () => any>,
	private?: Dictionary<string, any>,
	readonly?: Dictionary<string, any>,
	rules?: Dictionary<string, any>,
}

declare interface BaseClass {
    Id: string,
    ClassName: string,
	Name: string,
    SetName(name: string): any;
    IsA(self: BaseClass,className: string): boolean;
    new(...any): BaseClass;
    Clone(...any): BaseClass;
    Extend(self: BaseClass,className: string,classStructure: table): BaseClass;
    Destroy(): any;
}