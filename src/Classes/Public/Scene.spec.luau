local Scene = require(script.Parent.Scene)
local PhysicalObject = require(script.Parent.PhysicalObject)

return function()
	local newScene = Scene.new({ Parent = workspace })
	local newPhysicalObject = PhysicalObject.new({ Parent = workspace })
	newPhysicalObject:AddTag("NewTag")

	describe(":AddObject()", function()
		it("should add an object", function()
			newScene:AddObject(newPhysicalObject)
			expect(newScene.Objects[newPhysicalObject.Id].Id).to.equal(newPhysicalObject.Id)
		end)
	end)
	describe(":HasObject()", function()
		it("should check an object", function()
			expect(newScene:HasObject(newPhysicalObject)).to.equal(true)
		end)
	end)
	describe(":RemoveObject()", function()
		it("should remove an object", function()
			newScene:RemoveObject(newPhysicalObject)
			expect(newScene:HasObject(newPhysicalObject)).never.to.equal(true)
		end)
	end)
	describe(":GetTaggedObjects()", function()
		it("should get all tagged objects", function()
			newScene:AddObject(newPhysicalObject)
			expect(newScene:GetTaggedObjects("NewTag")[1].Id).to.equal(newPhysicalObject.Id)
		end)
	end)
	describe(":Raycast()", function()
		it("should throw a ray", function()
			expect(function()
				newScene:Raycast({
					From = Vector2.new(0.5, 0.5),
					To = Vector2.new(0.5, 0.5) * 5,
					FilterType = "Whitelist",
				})
			end).never.to.throw()
		end)
	end)
end
