local Scene = require(script.Parent.Scene)
local PhysicalObject = require(script.Parent.PhysicalObject)

return function()
	Scene = Scene:new()
	PhysicalObject = PhysicalObject:new()
	PhysicalObject:AddTag("NewTag")

	describe(":AddObject()", function()
		it("should add an object", function()
			Scene:AddObject(PhysicalObject)
			expect(Scene.Objects[PhysicalObject.Id].Id).to.equal(PhysicalObject.Id)
		end)
	end)
	describe(":HasObject()", function()
		it("should check an object", function()
			expect(Scene:HasObject(PhysicalObject)).to.equal(true)
		end)
	end)
	describe(":RemoveObject()", function()
		it("should remove an object", function()
			Scene:RemoveObject(PhysicalObject)
			expect(Scene:HasObject(PhysicalObject)).never.to.equal(true)
		end)
	end)
	describe(":GetTaggedObjects()", function()
		it("should get all tagged objects", function()
			Scene:AddObject(PhysicalObject)
			expect(Scene:GetTaggedObjects("NewTag")[1].Id).to.equal(PhysicalObject.Id)
		end)
	end)
	describe(":Raycast()", function()
		it("should throw a ray", function()
			expect(function()
				Scene:Raycast({
					From = Vector2.new(0.5, 0.5),
					To = Vector2.new(0.5, 0.5) * 5,
					FilterType = "Whitelist",
				})
			end).never.to.throw()
		end)
	end)
end
